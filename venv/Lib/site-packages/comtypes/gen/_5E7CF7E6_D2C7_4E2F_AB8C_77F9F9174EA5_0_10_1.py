# -*- coding: mbcs -*-
typelib_path = 'C:\\Program Files\\Oasys\\GSA 10.1\\Gsa.tlb'
_lcid = 0 # change this if required
from ctypes import *
from comtypes import BSTR
from comtypes.automation import _midlSAFEARRAY
from comtypes import GUID
from comtypes import CoClass
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from ctypes import HRESULT
from comtypes.automation import VARIANT
from ctypes.wintypes import VARIANT_BOOL
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid


class GsaNode(Structure):
    _recordinfo_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1, 0, '{B466869E-7E42-4244-AB90-823FE8085B26}')
GsaNode._fields_ = [
    ('Ref', c_int),
    ('Name', BSTR),
    ('Color', c_int),
    ('Coor', _midlSAFEARRAY(c_double)),
    ('Restraint', _midlSAFEARRAY(c_int)),
    ('SpringProperty', c_int),
    ('MassProperty', c_int),
    ('DamperProperty', c_int),
]
assert sizeof(GsaNode) == 56, sizeof(GsaNode)
assert alignment(GsaNode) == 8, alignment(GsaNode)
class ComAuto(CoClass):
    'ComAuto Class'
    _reg_clsid_ = GUID('{DA9D8CF0-713B-4E11-B1EB-5C2C47FD32A5}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1)
class IComAuto(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'IComAuto Interface'
    _iid_ = GUID('{FDFBB6AE-D4E5-471F-AFEA-84E236695A83}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ComAuto._com_interfaces_ = [IComAuto]

class GsaResults(Structure):
    _recordinfo_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1, 0, '{D051358F-FF85-4FB9-ADBF-597F8BB570BF}')
GsaResults._fields_ = [
    ('NumComponents', c_int),
    ('dynaResults', _midlSAFEARRAY(c_double)),
    ('Pos', c_double),
]
assert sizeof(GsaResults) == 24, sizeof(GsaResults)
assert alignment(GsaResults) == 8, alignment(GsaResults)

# values for enumeration 'ResHeader'
REF_DISP = 12001000
REF_VEL = 12002000
REF_ACC = 12003000
REF_REAC = 12004000
REF_FORCE_CONSTR = 12005000
REF_FORCE_NODAL = 12006000
REF_MASS_NODAL = 12007000
REF_SOIL_NODAL = 12008000
REF_DISP_EL1D = 14001000
REF_DISP_EL1D_REL = 14001500
REF_FORCE_EL1D = 14002000
REF_STRESS_EL1D = 14003000
REF_STRESS_EL1D_DRV = 14003200
REF_STRAIN_EL1D = 14003500
REF_SED_EL1D = 14004000
REF_SED_AVG_EL1D = 14005000
REF_STL_UTIL = 14006000
REF_DISP_EL2D = 15001000
REF_FORCE_EL2D_DRV = 15002000
REF_MOMENT_EL2D_PRJ = 15003000
REF_FORCE_EL2D_PRJ = 15004000
REF_STRESS_EL2D_DRV = 15005000
REF_STRESS_EL2D_AX = 15006000
REF_STRESS_EL2D_PRJ = 15007000
REF_RC_SLAB_REINF = 15010000
REF_DISP_EL3D = 15501000
REF_STRESS_EL3D_DRV = 15505000
REF_STRESS_EL3D_AX = 15506000
REF_FORCE_ASSEM = 18002000
REF_DISP_ASSEM = 18001400
ResHeader = c_int # enum

# values for enumeration 'DesignOption'
CHECK = 0
DESIGN = 1
DesignOption = c_int # enum
class GsaElement(Structure):
    _recordinfo_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1, 0, '{5B748F06-D97E-47D8-8281-B84DDB4D50CE}')
GsaElement._fields_ = [
    ('Ref', c_int),
    ('Name', BSTR),
    ('Color', c_int),
    ('eType', c_int),
    ('Property', c_int),
    ('Group', c_int),
    ('NumTopo', c_int),
    ('Topo', _midlSAFEARRAY(c_int)),
    ('Beta', c_double),
    ('OrientNode', c_int),
    ('Dummy', c_int),
    ('TotalOrient', c_double),
]
assert sizeof(GsaElement) == 72, sizeof(GsaElement)
assert alignment(GsaElement) == 8, alignment(GsaElement)

# values for enumeration 'GsRevit_SectTrnsDir'
GSA_TO_REVIT = 1
REVIT_TO_GSA = 2
GsRevit_SectTrnsDir = c_int # enum

# values for enumeration 'MaterialType'
UNDEF = 0
GENERIC = 0
STEEL = 1
CONCRETE = 2
ALUMINIUM = 3
GLASS = 4
FRP = 5
REBAR = 6
TIMBER = 7
FABRIC = 8
SOIL = 9
MaterialType = c_int # enum

# values for enumeration 'GsRevit_Usage'
FRAMING = 1
COLUMNS = 2
GsRevit_Usage = c_int # enum

# values for enumeration 'GsaEntity'
NODE = 1
ELEMENT = 2
MEMBER = 3
GsaEntity = c_int # enum

# values for enumeration 'Locale'
LOC_SYSTEM = 1
LOC_EN_GB = 2
Locale = c_int # enum
class GsaSection(Structure):
    _recordinfo_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1, 0, '{BDBD3F00-FA3C-4F06-9895-724EA7BB6EF8}')
GsaSection._fields_ = [
    ('Ref', c_int),
    ('Name', BSTR),
    ('Color', c_int),
    ('SectDesc', BSTR),
    ('Material', c_int),
    ('eMatType', c_int),
    ('MaterialGrade', c_int),
    ('Props', _midlSAFEARRAY(c_double)),
]
assert sizeof(GsaSection) == 56, sizeof(GsaSection)
assert alignment(GsaSection) == 8, alignment(GsaSection)
class GsaViewOrientation(Structure):
    _recordinfo_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1, 0, '{75ED14D2-493D-4356-BD0E-209E3DA3CD51}')
class GsaMember(Structure):
    _recordinfo_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1, 0, '{822809FC-ACA3-45BE-A273-FA062427908D}')
GsaMember._fields_ = [
    ('Ref', c_int),
    ('Name', BSTR),
    ('Color', c_int),
    ('Property', c_int),
    ('Group', c_int),
    ('Pool', c_int),
    ('NumTopo', c_int),
    ('Topo', _midlSAFEARRAY(c_int)),
    ('Beta', c_double),
    ('OrientNode', c_int),
    ('EndRestraint_1', BSTR),
    ('EndRestraint_2', BSTR),
    ('EndRelease_1', BSTR),
    ('EndRelease_2', BSTR),
]
assert sizeof(GsaMember) == 96, sizeof(GsaMember)
assert alignment(GsaMember) == 8, alignment(GsaMember)
IComAuto._methods_ = [
    COMMETHOD([dispid(1), helpstring('method Open')], HRESULT, 'Open',
              ( ['in'], BSTR, 'sPathName' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(2), helpstring('method Analyse')], HRESULT, 'Analyse',
              ( ['in', 'optional'], VARIANT, 'Task' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(3), helpstring('method Save')], HRESULT, 'Save',
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(4), helpstring('method SaveAs')], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'sPathName' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(5), helpstring('method Delete')], HRESULT, 'Delete',
              ( ['in'], BSTR, 'sContent' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(6), helpstring('method Close')], HRESULT, 'Close',
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(7), helpstring('method UpdateViews')], HRESULT, 'UpdateViews'),
    COMMETHOD([dispid(8), helpstring('method NewFile')], HRESULT, 'NewFile',
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(9), helpstring('method GwaCommand')], HRESULT, 'GwaCommand',
              ( ['in'], BSTR, 'sCommand' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'result' )),
    COMMETHOD([dispid(10), helpstring('method PrintView')], HRESULT, 'PrintView',
              ( ['in'], BSTR, 'sView' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(11), helpstring('method HighestView')], HRESULT, 'HighestView',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['out', 'retval'], POINTER(c_int), 'iView' )),
    COMMETHOD([dispid(12), helpstring('method ViewExist')], HRESULT, 'ViewExist',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(13), helpstring('method ViewName')], HRESULT, 'ViewName',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sName' )),
    COMMETHOD([dispid(14), helpstring('method NumArg')], HRESULT, 'NumArg',
              ( ['in'], BSTR, 'sLine' ),
              ( ['out', 'retval'], POINTER(c_int), 'iArg' )),
    COMMETHOD([dispid(15), helpstring('method Arg')], HRESULT, 'Arg',
              ( ['in'], c_int, 'iIndex' ),
              ( ['in'], BSTR, 'sLine' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sArg' )),
    COMMETHOD([dispid(16), helpstring('method SaveViewToFile')], HRESULT, 'SaveViewToFile',
              ( ['in'], BSTR, 'sView' ),
              ( ['in'], BSTR, 'sFileType' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(17), helpstring('method Output_Init')], HRESULT, 'Output_Init',
              ( ['in'], c_int, 'iFlags' ),
              ( ['in'], BSTR, 'sAxis' ),
              ( ['in'], BSTR, 'sCase' ),
              ( ['in'], c_int, 'iDataRef' ),
              ( ['in'], c_int, 'iNumEqInt1DPos' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(18), helpstring('method Output_SetStage')], HRESULT, 'Output_SetStage',
              ( ['in'], c_int, 'iStage' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(19), helpstring('method Output_DataTitle')], HRESULT, 'Output_DataTitle',
              ( ['in'], c_int, 'iFlags' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sTitle' )),
    COMMETHOD([dispid(20), helpstring('method Output_IsDataRef')], HRESULT, 'Output_IsDataRef',
              ( ['in'], c_int, 'iFlags' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(21), helpstring('method Output_UnitString')], HRESULT, 'Output_UnitString',
              ( ['out', 'retval'], POINTER(BSTR), 'sUnit' )),
    COMMETHOD([dispid(22), helpstring('method Output_UnitFactor')], HRESULT, 'Output_UnitFactor',
              ( ['out', 'retval'], POINTER(c_float), 'fFactor' )),
    COMMETHOD([dispid(23), helpstring('method Output_DataExist')], HRESULT, 'Output_DataExist',
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(24), helpstring('method Output_NumElemPos')], HRESULT, 'Output_NumElemPos',
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_int), 'iNum' )),
    COMMETHOD([dispid(25), helpstring('method Output_1DElemPos')], HRESULT, 'Output_1DElemPos',
              ( ['in'], c_int, 'iPos' ),
              ( ['out', 'retval'], POINTER(c_float), 'fPos' )),
    COMMETHOD([dispid(26), helpstring('method Output_Extract')], HRESULT, 'Output_Extract',
              ( ['in'], c_int, 'iRef' ),
              ( ['in'], c_int, 'iPos' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'cVariant' )),
    COMMETHOD([dispid(27), helpstring('method HighestCase')], HRESULT, 'HighestCase',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['out', 'retval'], POINTER(c_int), 'iCase' )),
    COMMETHOD([dispid(28), helpstring('method CaseExist')], HRESULT, 'CaseExist',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(29), helpstring('method CaseName')], HRESULT, 'CaseName',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sName' )),
    COMMETHOD([dispid(30), helpstring('method CaseNumPerm')], HRESULT, 'CaseNumPerm',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_int), 'nPerm' )),
    COMMETHOD([dispid(31), helpstring('method CasePermDesc')], HRESULT, 'CasePermDesc',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['in'], c_int, 'iPerm' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sDesc' )),
    COMMETHOD([dispid(32), helpstring('method CasePermString')], HRESULT, 'CasePermString',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['in'], c_int, 'iPerm' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sOutput' )),
    COMMETHOD([dispid(33), helpstring('method CasePermAnalFactor')], HRESULT, 'CasePermAnalFactor',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['in'], c_int, 'iPerm' ),
              ( ['in'], c_int, 'iAnalRef' ),
              ( ['out', 'retval'], POINTER(c_float), 'fFactor' )),
    COMMETHOD([dispid(34), helpstring('method Output_Extract_CurPerm')], HRESULT, 'Output_Extract_CurPerm',
              ( ['out', 'retval'], POINTER(c_int), 'iPerm' )),
    COMMETHOD([dispid(35), helpstring('method CaseResultsExist')], HRESULT, 'CaseResultsExist',
              ( ['in'], BSTR, 'sCaseOp' ),
              ( ['in'], c_int, 'iRef' ),
              ( ['in'], c_int, 'iPerm' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(36), helpstring('method CaseTask')], HRESULT, 'CaseTask',
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_int), 'iTask' )),
    COMMETHOD([dispid(37), helpstring('method TaskStatus')], HRESULT, 'TaskStatus',
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(38), helpstring('method ProcessID')], HRESULT, 'ProcessID',
              ( ['out', 'retval'], POINTER(c_int), 'iID' )),
    COMMETHOD([dispid(39), helpstring('method Gen_NodeAt')], HRESULT, 'Gen_NodeAt',
              ( ['in'], c_double, 'dX' ),
              ( ['in'], c_double, 'dY' ),
              ( ['in'], c_double, 'dZ' ),
              ( ['in'], c_double, 'dCoincidenceTol' ),
              ( ['out', 'retval'], POINTER(c_int), 'iNode' )),
    COMMETHOD([dispid(40), helpstring('method Gen_SectionMatchDesc')], HRESULT, 'Gen_SectionMatchDesc',
              ( ['in'], BSTR, 'sDesc' ),
              ( ['in'], c_int, 'iFlags' ),
              ( ['in'], VARIANT_BOOL, 'bSimple' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sSectionDesc' )),
    COMMETHOD([dispid(41), helpstring('method VersionString')], HRESULT, 'VersionString',
              ( ['out', 'retval'], POINTER(BSTR), 'sVersion' )),
    COMMETHOD([dispid(42), helpstring('method SectionUsage')], HRESULT, 'SectionUsage',
              ( ['in'], c_int, 'iSec' ),
              ( ['in', 'optional'], c_int, 'eSel', 3 ),
              ( ['in', 'optional'], c_int, 'iStage', 0 ),
              ( ['out', 'retval'], POINTER(c_int), 'iResult' )),
    COMMETHOD([dispid(43), helpstring('method Gen_SectTransltnGsRevit')], HRESULT, 'Gen_SectTransltnGsRevit',
              ( ['in'], BSTR, 'nameIn' ),
              ( [], GsRevit_SectTrnsDir, 'eDir' ),
              ( [], GsRevit_Usage, 'usage' ),
              ( ['in', 'out'], POINTER(BSTR), 'familyName' ),
              ( ['out', 'retval'], POINTER(BSTR), 'nameOut' )),
    COMMETHOD([dispid(44), helpstring('method MembNumElem')], HRESULT, 'MembNumElem',
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_int), 'nElem' )),
    COMMETHOD([dispid(45), helpstring('method MembElemNum')], HRESULT, 'MembElemNum',
              ( ['in'], c_int, 'iRef' ),
              ( ['in'], c_int, 'iIdx' ),
              ( ['out', 'retval'], POINTER(c_int), 'iElem' )),
    COMMETHOD([dispid(46), helpstring('method ElemMembNum')], HRESULT, 'ElemMembNum',
              ( ['in'], c_int, 'iRef' ),
              ( ['out', 'retval'], POINTER(c_int), 'iMemb' )),
    COMMETHOD([dispid(47), helpstring('method Tool_UpdateElemSections')], HRESULT, 'Tool_UpdateElemSections',
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(48), helpstring('method Tool_ResetMemberSections')], HRESULT, 'Tool_ResetMemberSections',
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(49), helpstring('method IsItemIncluded')], HRESULT, 'IsItemIncluded',
              ( ['in'], BSTR, 'sType' ),
              ( ['in'], c_int, 'iIndex' ),
              ( ['in'], BSTR, 'sList' ),
              ( ['out', 'retval'], POINTER(c_int), 'retCode' )),
    COMMETHOD([dispid(53), helpstring('method GetSidTagValue')], HRESULT, 'GetSidTagValue',
              ( ['in'], BSTR, 'sKey' ),
              ( ['in'], c_int, 'iRecord' ),
              ( ['in'], BSTR, 'sTag' ),
              ( ['out', 'retval'], POINTER(BSTR), 'psValue' )),
    COMMETHOD([dispid(54), helpstring('method WriteSidTagValue')], HRESULT, 'WriteSidTagValue',
              ( ['in'], BSTR, 'sKey' ),
              ( ['in'], c_int, 'iRecord' ),
              ( ['in'], BSTR, 'sTag' ),
              ( ['in'], BSTR, 'sValue' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(55), helpstring('method NodeCoor')], HRESULT, 'NodeCoor',
              ( ['in'], c_int, 'iRef' ),
              ( ['out'], POINTER(c_double), 'pX' ),
              ( ['out'], POINTER(c_double), 'pY' ),
              ( ['out'], POINTER(c_double), 'pZ' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(56), helpstring('method Renumber_Init')], HRESULT, 'Renumber_Init',
              ( ['in'], GsaEntity, 'option' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(57), helpstring('method Renumber_SetTo')], HRESULT, 'Renumber_SetTo',
              ( ['in'], GsaEntity, 'option' ),
              ( [], c_int, 'oldRef' ),
              ( [], c_int, 'newRef' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(58), helpstring('method Renumber_Go')], HRESULT, 'Renumber_Go',
              ( ['in'], GsaEntity, 'option' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(59), helpstring('method SetLocale')], HRESULT, 'SetLocale',
              ( ['in'], Locale, 'Locale' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(60), helpstring('method Output_Init_Arr')], HRESULT, 'Output_Init_Arr',
              ( ['in'], c_int, 'iFlags' ),
              ( ['in'], BSTR, 'sAxis' ),
              ( ['in'], BSTR, 'sCase' ),
              ( ['in'], ResHeader, 'header' ),
              ( ['in'], c_int, 'iNumEqInt1DPos' ),
              ( ['out', 'retval'], POINTER(c_short), 'psCode' )),
    COMMETHOD([dispid(61), helpstring('method Output_Extract_Arr')], HRESULT, 'Output_Extract_Arr',
              ( ['in'], c_int, 'iRef' ),
              ( ['out'], POINTER(_midlSAFEARRAY(GsaResults)), 'arrayResults' ),
              ( ['out'], POINTER(c_int), 'NumComponents' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(62), helpstring('method EntitiesInList')], HRESULT, 'EntitiesInList',
              ( ['in'], BSTR, 'sList' ),
              ( ['in', 'out'], POINTER(GsaEntity), 'listType' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'arrayEntities' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(63), helpstring('method CopyView')], HRESULT, 'CopyView',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['out'], POINTER(c_int), 'idxNewView' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(64), helpstring('method RenameView')], HRESULT, 'RenameView',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], BSTR, 'sNewName' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(65), helpstring('method DeleteView')], HRESULT, 'DeleteView',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(66), helpstring('method GetViewCaseList')], HRESULT, 'GetViewCaseList',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['out'], POINTER(BSTR), 'sList' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(67), helpstring('method SetViewCaseList')], HRESULT, 'SetViewCaseList',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], BSTR, 'sList' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(68), helpstring('method GetViewDisplayList')], HRESULT, 'GetViewDisplayList',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['in', 'out'], POINTER(GsaEntity), 'listType' ),
              ( ['out'], POINTER(BSTR), 'sList' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(69), helpstring('method SetViewDisplayList')], HRESULT, 'SetViewDisplayList',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], GsaEntity, 'listType' ),
              ( ['in'], BSTR, 'sList' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(70), helpstring('method RescaleViewData')], HRESULT, 'RescaleViewData',
              ( ['in'], c_int, 'idxView' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(71), helpstring('method NodeConnectedElem')], HRESULT, 'NodeConnectedEnt',
              ( ['in'], GsaEntity, 'entityType' ),
              ( ['in'], c_int, 'nodeRef' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'entRefs' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(72), helpstring('method LogFeatureUsage')], HRESULT, 'LogFeatureUsage',
              ( ['in'], BSTR, 'featureIn' )),
    COMMETHOD([dispid(73), helpstring('method Nodes: extract node objects using an array of node references')], HRESULT, 'Nodes',
              ( ['in'], _midlSAFEARRAY(c_int), 'nodeRefs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(GsaNode)), 'objNodes' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(74), helpstring('method SetNodes: set node objects into the model')], HRESULT, 'SetNodes',
              ( ['in'], _midlSAFEARRAY(GsaNode), 'objNodesIn' ),
              ( ['in'], VARIANT_BOOL, 'Overwrite' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(75), helpstring('method Elements: extract element objects using an array of element references')], HRESULT, 'Elements',
              ( ['in'], _midlSAFEARRAY(c_int), 'elemRefs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(GsaElement)), 'objElems' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(76), helpstring('method SetElements: set element objects into the model')], HRESULT, 'SetElements',
              ( ['in'], _midlSAFEARRAY(GsaElement), 'objElemsIn' ),
              ( ['in'], VARIANT_BOOL, 'Overwrite' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(77), helpstring('method Sections: extract section objects using an array of section references')], HRESULT, 'Sections',
              ( ['in'], _midlSAFEARRAY(c_int), 'sectRefs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(GsaSection)), 'objSections' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(78), helpstring('method SetSections: set section objects into the model')], HRESULT, 'SetSections',
              ( ['in'], _midlSAFEARRAY(GsaSection), 'objSectsIn' ),
              ( ['in'], VARIANT_BOOL, 'Overwrite' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(79), helpstring('method MembCoorOnCurve')], HRESULT, 'MembCoorOnCurve',
              ( ['in'], c_int, 'iMembRef' ),
              ( ['out'], POINTER(c_double), 'pX' ),
              ( ['out'], POINTER(c_double), 'pY' ),
              ( ['out'], POINTER(c_double), 'pZ' ),
              ( ['out', 'retval'], POINTER(c_short), 'psCode' )),
    COMMETHOD([dispid(80), helpstring('method MappingDBPath')], HRESULT, 'MappingDBPath',
              ( ['out'], POINTER(BSTR), 'psMappingPath' ),
              ( ['out', 'retval'], POINTER(c_short), 'psCode' )),
    COMMETHOD([dispid(81), helpstring('method Output_Extract_CutAssembly: extract cut section forces')], HRESULT, 'Output_Extract_CutAssembly',
              ( ['in'], c_int, 'assembRef' ),
              ( ['in'], VARIANT_BOOL, 'Avg2DStress' ),
              ( ['in'], VARIANT_BOOL, 'Disp' ),
              ( ['in'], BSTR, 'sCase' ),
              ( ['in'], BSTR, 'sAxis' ),
              ( ['out'], POINTER(_midlSAFEARRAY(GsaResults)), 'arrayResults' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(82), helpstring('method ElemIsVertical')], HRESULT, 'ElemIsVertical',
              ( ['in'], c_int, 'iElem' ),
              ( ['in', 'optional'], c_int, 'eSel', 3 ),
              ( ['out', 'retval'], POINTER(c_int), 'iResult' )),
    COMMETHOD([dispid(83), helpstring('method ElemIsHorizontal')], HRESULT, 'ElemIsHorizontal',
              ( ['in'], c_int, 'iElem' ),
              ( ['in', 'optional'], c_int, 'eSel', 3 ),
              ( ['out', 'retval'], POINTER(c_int), 'iResult' )),
    COMMETHOD([dispid(87), helpstring('method ViewRefFromName')], HRESULT, 'ViewRefFromName',
              ( ['in'], BSTR, 'sViewType' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(c_int), 'iRef' )),
    COMMETHOD([dispid(88), helpstring('method createNewView')], HRESULT, 'CreateNewView',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(c_int), 'psCode' )),
    COMMETHOD([dispid(89), helpstring('method SetViewContour')], HRESULT, 'SetViewContour',
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], c_int, 'iDataRef' ),
              ( ['in'], BSTR, 'sSavedViewGwa' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(90), helpstring('method SetViewDiagram')], HRESULT, 'SetViewDiagram',
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], c_int, 'iDataRef' ),
              ( ['in'], BSTR, 'sSavedViewGwa' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(91), helpstring('method SetViewLabels')], HRESULT, 'SetViewLabels',
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], BSTR, 'savedViewGwa' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(92), helpstring('method SetViewOrientation')], HRESULT, 'GetViewOrientation',
              ( ['in'], c_int, 'idxView' ),
              ( ['out'], POINTER(GsaViewOrientation), 'orientation' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(93), helpstring('method SetViewOrientation')], HRESULT, 'SetViewOrientation',
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], POINTER(GsaViewOrientation), 'orientation' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(94), helpstring('method DesignTaskStatus')], HRESULT, 'DesignTaskStatus',
              ( ['in'], c_int, 'idxTask' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(95), helpstring('method Design')], HRESULT, 'DESIGN',
              ( ['in'], c_int, 'idxTask' ),
              ( ['in'], DesignOption, 'option' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(96), helpstring('method Members: extract member objects using an array of references')], HRESULT, 'Members',
              ( ['in'], _midlSAFEARRAY(c_int), 'membRefs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(GsaMember)), 'objMembs' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(97), helpstring('method SetMembers: set member objects into the model')], HRESULT, 'SetMembers',
              ( ['in'], _midlSAFEARRAY(GsaMember), 'objMembsIn' ),
              ( ['in'], VARIANT_BOOL, 'Overwrite' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(98), helpstring('method Tool_GetElemLength')], HRESULT, 'Tool_GetEntLength',
              ( ['in'], c_int, 'idxElem' ),
              ( ['in'], GsaEntity, 'entityType' ),
              ( ['out', 'retval'], POINTER(c_double), 'length' )),
    COMMETHOD([dispid(99), helpstring('method SetViewBaseSettings')], HRESULT, 'SetViewBaseSettings',
              ( ['in'], c_int, 'idxView' ),
              ( ['in'], BSTR, 'savedViewGwa' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(100), helpstring('method RescaleViewToFit')], HRESULT, 'RescaleViewToFit',
              ( ['in'], c_int, 'idxView' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(101), helpstring('method DisplayGsaWindow')], HRESULT, 'DisplayGsaWindow',
              ( ['in'], VARIANT_BOOL, 'bDisplay' )),
    COMMETHOD([dispid(102), helpstring('method Output_BeamForces')], HRESULT, 'Output_BeamForces',
              ( ['in'], c_int, 'iEquidistPts' ),
              ( ['in'], BSTR, 'sAxis' ),
              ( ['in'], BSTR, 'sCase' ),
              ( ['in'], c_int, 'iElem' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_double)), 'results' ),
              ( ['out'], POINTER(c_int), 'numPoints' ),
              ( ['out', 'retval'], POINTER(c_short), 'psCode' )),
    COMMETHOD([dispid(103), helpstring('method ReindexCasesAndTasks')], HRESULT, 'ReindexCasesAndTasks'),
    COMMETHOD([dispid(104), helpstring('method CreateElementsFromMembers')], HRESULT, 'CreateElementsFromMembers',
              ( ['in'], BSTR, 'memberList' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
    COMMETHOD([dispid(105), helpstring('method ExportToCsv')], HRESULT, 'ExportToCsv',
              ( ['in'], BSTR, 'pathname' ),
              ( ['in'], c_int, 'numPoint' ),
              ( ['in'], VARIANT_BOOL, 'interestingPoints' ),
              ( ['in'], VARIANT_BOOL, 'combinations' ),
              ( ['in'], BSTR, 'delimiter' ),
              ( ['out', 'retval'], POINTER(c_short), 'retCode' )),
]
################################################################
## code template for IComAuto implementation
##class IComAuto_Impl(object):
##    def Open(self, sPathName):
##        'method Open'
##        #return retCode
##
##    def Analyse(self, Task):
##        'method Analyse'
##        #return retCode
##
##    def Save(self):
##        'method Save'
##        #return retCode
##
##    def SaveAs(self, sPathName):
##        'method SaveAs'
##        #return retCode
##
##    def Delete(self, sContent):
##        'method Delete'
##        #return retCode
##
##    def Close(self):
##        'method Close'
##        #return retCode
##
##    def UpdateViews(self):
##        'method UpdateViews'
##        #return 
##
##    def NewFile(self):
##        'method NewFile'
##        #return retCode
##
##    def GwaCommand(self, sCommand):
##        'method GwaCommand'
##        #return result
##
##    def PrintView(self, sView):
##        'method PrintView'
##        #return retCode
##
##    def HighestView(self, sViewType):
##        'method HighestView'
##        #return iView
##
##    def ViewExist(self, sViewType, iRef):
##        'method ViewExist'
##        #return retCode
##
##    def ViewName(self, sViewType, iRef):
##        'method ViewName'
##        #return sName
##
##    def NumArg(self, sLine):
##        'method NumArg'
##        #return iArg
##
##    def Arg(self, iIndex, sLine):
##        'method Arg'
##        #return sArg
##
##    def SaveViewToFile(self, sView, sFileType):
##        'method SaveViewToFile'
##        #return retCode
##
##    def Output_Init(self, iFlags, sAxis, sCase, iDataRef, iNumEqInt1DPos):
##        'method Output_Init'
##        #return retCode
##
##    def Output_SetStage(self, iStage):
##        'method Output_SetStage'
##        #return retCode
##
##    def Output_DataTitle(self, iFlags):
##        'method Output_DataTitle'
##        #return sTitle
##
##    def Output_IsDataRef(self, iFlags):
##        'method Output_IsDataRef'
##        #return retCode
##
##    def Output_UnitString(self):
##        'method Output_UnitString'
##        #return sUnit
##
##    def Output_UnitFactor(self):
##        'method Output_UnitFactor'
##        #return fFactor
##
##    def Output_DataExist(self, iRef):
##        'method Output_DataExist'
##        #return retCode
##
##    def Output_NumElemPos(self, iRef):
##        'method Output_NumElemPos'
##        #return iNum
##
##    def Output_1DElemPos(self, iPos):
##        'method Output_1DElemPos'
##        #return fPos
##
##    def Output_Extract(self, iRef, iPos):
##        'method Output_Extract'
##        #return cVariant
##
##    def HighestCase(self, sCaseOp):
##        'method HighestCase'
##        #return iCase
##
##    def CaseExist(self, sCaseOp, iRef):
##        'method CaseExist'
##        #return retCode
##
##    def CaseName(self, sCaseOp, iRef):
##        'method CaseName'
##        #return sName
##
##    def CaseNumPerm(self, sCaseOp, iRef):
##        'method CaseNumPerm'
##        #return nPerm
##
##    def CasePermDesc(self, sCaseOp, iRef, iPerm):
##        'method CasePermDesc'
##        #return sDesc
##
##    def CasePermString(self, sCaseOp, iRef, iPerm):
##        'method CasePermString'
##        #return sOutput
##
##    def CasePermAnalFactor(self, sCaseOp, iRef, iPerm, iAnalRef):
##        'method CasePermAnalFactor'
##        #return fFactor
##
##    def Output_Extract_CurPerm(self):
##        'method Output_Extract_CurPerm'
##        #return iPerm
##
##    def CaseResultsExist(self, sCaseOp, iRef, iPerm):
##        'method CaseResultsExist'
##        #return retCode
##
##    def CaseTask(self, iRef):
##        'method CaseTask'
##        #return iTask
##
##    def TaskStatus(self, iRef):
##        'method TaskStatus'
##        #return retCode
##
##    def ProcessID(self):
##        'method ProcessID'
##        #return iID
##
##    def Gen_NodeAt(self, dX, dY, dZ, dCoincidenceTol):
##        'method Gen_NodeAt'
##        #return iNode
##
##    def Gen_SectionMatchDesc(self, sDesc, iFlags, bSimple):
##        'method Gen_SectionMatchDesc'
##        #return sSectionDesc
##
##    def VersionString(self):
##        'method VersionString'
##        #return sVersion
##
##    def SectionUsage(self, iSec, eSel, iStage):
##        'method SectionUsage'
##        #return iResult
##
##    def Gen_SectTransltnGsRevit(self, nameIn, eDir, usage):
##        'method Gen_SectTransltnGsRevit'
##        #return familyName, nameOut
##
##    def MembNumElem(self, iRef):
##        'method MembNumElem'
##        #return nElem
##
##    def MembElemNum(self, iRef, iIdx):
##        'method MembElemNum'
##        #return iElem
##
##    def ElemMembNum(self, iRef):
##        'method ElemMembNum'
##        #return iMemb
##
##    def Tool_UpdateElemSections(self):
##        'method Tool_UpdateElemSections'
##        #return retCode
##
##    def Tool_ResetMemberSections(self):
##        'method Tool_ResetMemberSections'
##        #return retCode
##
##    def IsItemIncluded(self, sType, iIndex, sList):
##        'method IsItemIncluded'
##        #return retCode
##
##    def GetSidTagValue(self, sKey, iRecord, sTag):
##        'method GetSidTagValue'
##        #return psValue
##
##    def WriteSidTagValue(self, sKey, iRecord, sTag, sValue):
##        'method WriteSidTagValue'
##        #return retCode
##
##    def NodeCoor(self, iRef):
##        'method NodeCoor'
##        #return pX, pY, pZ, retCode
##
##    def Renumber_Init(self, option):
##        'method Renumber_Init'
##        #return retCode
##
##    def Renumber_SetTo(self, option, oldRef, newRef):
##        'method Renumber_SetTo'
##        #return retCode
##
##    def Renumber_Go(self, option):
##        'method Renumber_Go'
##        #return retCode
##
##    def SetLocale(self, Locale):
##        'method SetLocale'
##        #return retCode
##
##    def Output_Init_Arr(self, iFlags, sAxis, sCase, header, iNumEqInt1DPos):
##        'method Output_Init_Arr'
##        #return psCode
##
##    def Output_Extract_Arr(self, iRef):
##        'method Output_Extract_Arr'
##        #return arrayResults, NumComponents, retCode
##
##    def EntitiesInList(self, sList):
##        'method EntitiesInList'
##        #return listType, arrayEntities, retCode
##
##    def CopyView(self, sViewType, idxView):
##        'method CopyView'
##        #return idxNewView, retCode
##
##    def RenameView(self, sViewType, idxView, sNewName):
##        'method RenameView'
##        #return retCode
##
##    def DeleteView(self, sViewType, idxView):
##        'method DeleteView'
##        #return retCode
##
##    def GetViewCaseList(self, sViewType, idxView):
##        'method GetViewCaseList'
##        #return sList, retCode
##
##    def SetViewCaseList(self, sViewType, idxView, sList):
##        'method SetViewCaseList'
##        #return retCode
##
##    def GetViewDisplayList(self, sViewType, idxView):
##        'method GetViewDisplayList'
##        #return listType, sList, retCode
##
##    def SetViewDisplayList(self, sViewType, idxView, listType, sList):
##        'method SetViewDisplayList'
##        #return retCode
##
##    def RescaleViewData(self, idxView):
##        'method RescaleViewData'
##        #return retCode
##
##    def NodeConnectedEnt(self, entityType, nodeRef):
##        'method NodeConnectedElem'
##        #return entRefs, retCode
##
##    def LogFeatureUsage(self, featureIn):
##        'method LogFeatureUsage'
##        #return 
##
##    def Nodes(self, nodeRefs):
##        'method Nodes: extract node objects using an array of node references'
##        #return objNodes, retCode
##
##    def SetNodes(self, objNodesIn, Overwrite):
##        'method SetNodes: set node objects into the model'
##        #return retCode
##
##    def Elements(self, elemRefs):
##        'method Elements: extract element objects using an array of element references'
##        #return objElems, retCode
##
##    def SetElements(self, objElemsIn, Overwrite):
##        'method SetElements: set element objects into the model'
##        #return retCode
##
##    def Sections(self, sectRefs):
##        'method Sections: extract section objects using an array of section references'
##        #return objSections, retCode
##
##    def SetSections(self, objSectsIn, Overwrite):
##        'method SetSections: set section objects into the model'
##        #return retCode
##
##    def MembCoorOnCurve(self, iMembRef):
##        'method MembCoorOnCurve'
##        #return pX, pY, pZ, psCode
##
##    def MappingDBPath(self):
##        'method MappingDBPath'
##        #return psMappingPath, psCode
##
##    def Output_Extract_CutAssembly(self, assembRef, Avg2DStress, Disp, sCase, sAxis):
##        'method Output_Extract_CutAssembly: extract cut section forces'
##        #return arrayResults, retCode
##
##    def ElemIsVertical(self, iElem, eSel):
##        'method ElemIsVertical'
##        #return iResult
##
##    def ElemIsHorizontal(self, iElem, eSel):
##        'method ElemIsHorizontal'
##        #return iResult
##
##    def ViewRefFromName(self, sViewType, Name):
##        'method ViewRefFromName'
##        #return iRef
##
##    def CreateNewView(self, Name):
##        'method createNewView'
##        #return psCode
##
##    def SetViewContour(self, idxView, iDataRef, sSavedViewGwa):
##        'method SetViewContour'
##        #return retCode
##
##    def SetViewDiagram(self, idxView, iDataRef, sSavedViewGwa):
##        'method SetViewDiagram'
##        #return retCode
##
##    def SetViewLabels(self, idxView, savedViewGwa):
##        'method SetViewLabels'
##        #return retCode
##
##    def GetViewOrientation(self, idxView):
##        'method SetViewOrientation'
##        #return orientation, retCode
##
##    def SetViewOrientation(self, idxView, orientation):
##        'method SetViewOrientation'
##        #return retCode
##
##    def DesignTaskStatus(self, idxTask):
##        'method DesignTaskStatus'
##        #return retCode
##
##    def DESIGN(self, idxTask, option):
##        'method Design'
##        #return retCode
##
##    def Members(self, membRefs):
##        'method Members: extract member objects using an array of references'
##        #return objMembs, retCode
##
##    def SetMembers(self, objMembsIn, Overwrite):
##        'method SetMembers: set member objects into the model'
##        #return retCode
##
##    def Tool_GetEntLength(self, idxElem, entityType):
##        'method Tool_GetElemLength'
##        #return length
##
##    def SetViewBaseSettings(self, idxView, savedViewGwa):
##        'method SetViewBaseSettings'
##        #return retCode
##
##    def RescaleViewToFit(self, idxView):
##        'method RescaleViewToFit'
##        #return retCode
##
##    def DisplayGsaWindow(self, bDisplay):
##        'method DisplayGsaWindow'
##        #return 
##
##    def Output_BeamForces(self, iEquidistPts, sAxis, sCase, iElem):
##        'method Output_BeamForces'
##        #return results, numPoints, psCode
##
##    def ReindexCasesAndTasks(self):
##        'method ReindexCasesAndTasks'
##        #return 
##
##    def CreateElementsFromMembers(self, memberList):
##        'method CreateElementsFromMembers'
##        #return retCode
##
##    def ExportToCsv(self, pathname, numPoint, interestingPoints, combinations, delimiter):
##        'method ExportToCsv'
##        #return retCode
##

class Library(object):
    'Gsa 10.1 Type Library'
    name = 'Gsa_10_1'
    _reg_typelib_ = ('{5E7CF7E6-D2C7-4E2F-AB8C-77F9F9174EA5}', 10, 1)

GsaViewOrientation._fields_ = [
    ('Latitude', c_double),
    ('Longitude', c_double),
    ('EyeDistance', c_double),
    ('ObjectPoint', _midlSAFEARRAY(c_double)),
    ('MidPoint', _midlSAFEARRAY(c_double)),
    ('PictureRotation', c_double),
]
assert sizeof(GsaViewOrientation) == 48, sizeof(GsaViewOrientation)
assert alignment(GsaViewOrientation) == 8, alignment(GsaViewOrientation)

# values for enumeration 'GsRevit_Units'
METRIC = 1
IMPERIAL = 2
GsRevit_Units = c_int # enum

# values for enumeration 'RestraintDir'
RD_FREE = 0
RD_X = 1
RD_Y = 2
RD_Z = 4
RD_PIN = 7
RD_XX = 8
RD_YY = 16
RD_ZZ = 32
RD_RPIN = 56
RD_ENC = 63
RD_DIS = 7
RD_ROT = 56
RD_ALL = 63
RestraintDir = c_int # enum

# values for enumeration 'ElementType'
BAR = 1
BEAM = 2
SPRING = 3
QUAD4 = 5
QUAD8 = 6
TRI3 = 7
TRI6 = 8
LINK = 9
CABLE = 10
BRICK8 = 12
WEDGE6 = 14
TETRA4 = 16
SPACER = 19
STRUT = 20
TIE = 21
ROD = 23
DAMPER = 24
PYRAMID5 = 26
ElementType = c_int # enum
__all__ = [ 'REF_STRESS_EL2D_AX', 'REF_DISP_ASSEM', 'GsRevit_Usage',
           'GsaViewOrientation', 'Locale', 'GsaResults', 'TRI6',
           'GsRevit_SectTrnsDir', 'REF_STRESS_EL1D_DRV', 'LOC_SYSTEM',
           'REF_DISP', 'QUAD4', 'GENERIC', 'ELEMENT', 'ComAuto',
           'CABLE', 'RestraintDir', 'CHECK', 'GsaElement', 'COLUMNS',
           'REF_DISP_EL1D_REL', 'RD_Y', 'ResHeader', 'REF_MASS_NODAL',
           'FRAMING', 'REF_SOIL_NODAL', 'REF_DISP_EL2D', 'MEMBER',
           'GSA_TO_REVIT', 'GsaEntity', 'RD_PIN', 'MaterialType',
           'RD_FREE', 'REF_STRESS_EL2D_PRJ', 'REF_ACC', 'PYRAMID5',
           'RD_X', 'RD_DIS', 'REF_FORCE_CONSTR', 'ALUMINIUM',
           'REF_STRESS_EL3D_DRV', 'FRP', 'SOIL', 'TIMBER', 'STEEL',
           'RD_ALL', 'BRICK8', 'REF_FORCE_ASSEM', 'ElementType',
           'IComAuto', 'GsaSection', 'REF_FORCE_EL1D', 'WEDGE6',
           'REF_DISP_EL1D', 'REF_FORCE_EL2D_PRJ', 'QUAD8', 'REF_VEL',
           'RD_ROT', 'RD_ZZ', 'REF_STRESS_EL2D_DRV', 'SPRING',
           'SPACER', 'BAR', 'REF_FORCE_NODAL', 'GsaMember',
           'REF_DISP_EL3D', 'RD_XX', 'TIE', 'REF_STRESS_EL3D_AX',
           'CONCRETE', 'REF_REAC', 'RD_RPIN', 'REF_STRESS_EL1D',
           'NODE', 'FABRIC', 'GLASS', 'DAMPER', 'REF_RC_SLAB_REINF',
           'REF_SED_EL1D', 'METRIC', 'REF_FORCE_EL2D_DRV',
           'REVIT_TO_GSA', 'UNDEF', 'LOC_EN_GB', 'GsaNode', 'TRI3',
           'GsRevit_Units', 'RD_Z', 'REBAR', 'STRUT',
           'REF_STRAIN_EL1D', 'LINK', 'ROD', 'DesignOption', 'RD_YY',
           'IMPERIAL', 'BEAM', 'TETRA4', 'REF_STL_UTIL',
           'REF_MOMENT_EL2D_PRJ', 'DESIGN', 'REF_SED_AVG_EL1D',
           'RD_ENC']
from comtypes import _check_version; _check_version('1.1.11', 1658331988.0)
